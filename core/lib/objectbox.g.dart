// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'dto/models/product/product_mapper.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 960644594881846531),
      name: 'ProductMapper',
      lastPropertyId: const obx_int.IdUid(15, 8186608715627276517),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3750605332216110075),
            name: 'id',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8900297565974883498),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 1009583478513779326),
            name: 'image',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 9223325459461983908),
            name: 'discountPercentage',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8230330960848153709),
            name: 'price',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 93210529583266578),
            name: 'quantity',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6055000411201114065),
            name: 'minQuantity',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 381721952446287124),
            name: 'maxQuantity',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5731113652245325273),
            name: 'currency',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 454271102339274990),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7216198585303806245),
            name: 'barCode',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 7802836159959262172),
            name: 'isFavourite',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 4905999164653494280),
            name: 'isAvailable',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 6522995013348245211),
            name: 'isAddedToCart',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 8186608715627276517),
            name: 'id2',
            type: 6,
            flags: 1)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 960644594881846531),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    ProductMapper: obx_int.EntityDefinition<ProductMapper>(
        model: _entities[0],
        toOneRelations: (ProductMapper object) => [],
        toManyRelations: (ProductMapper object) => {},
        getId: (ProductMapper object) => object.id2,
        setId: (ProductMapper object, int id) {
          object.id2 = id;
        },
        objectToFB: (ProductMapper object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final imageOffset = fbb.writeString(object.image);
          final currencyOffset = fbb.writeString(object.currency);
          final descriptionOffset = fbb.writeString(object.description);
          final barCodeOffset = fbb.writeString(object.barCode);
          fbb.startTable(16);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, imageOffset);
          fbb.addInt64(3, object.discountPercentage);
          fbb.addFloat64(4, object.price);
          fbb.addFloat64(5, object.quantity);
          fbb.addFloat64(6, object.minQuantity);
          fbb.addFloat64(7, object.maxQuantity);
          fbb.addOffset(8, currencyOffset);
          fbb.addOffset(9, descriptionOffset);
          fbb.addOffset(10, barCodeOffset);
          fbb.addBool(11, object.isFavourite);
          fbb.addBool(12, object.isAvailable);
          fbb.addBool(13, object.isAddedToCart);
          fbb.addInt64(14, object.id2);
          fbb.finish(fbb.endTable());
          return object.id2;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = ProductMapper()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..name = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 6, '')
            ..image = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 8, '')
            ..discountPercentage =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0)
            ..price =
                const fb.Float64Reader().vTableGet(buffer, rootOffset, 12, 0)
            ..quantity =
                const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0)
            ..minQuantity =
                const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0)
            ..maxQuantity =
                const fb.Float64Reader().vTableGet(buffer, rootOffset, 18, 0)
            ..currency = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 20, '')
            ..description = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 22, '')
            ..barCode = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 24, '')
            ..isFavourite =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 26, false)
            ..isAvailable =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 28, false)
            ..isAddedToCart =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 30, false)
            ..id2 = const fb.Int64Reader().vTableGet(buffer, rootOffset, 32, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [ProductMapper] entity fields to define ObjectBox queries.
class ProductMapper_ {
  /// See [ProductMapper.id].
  static final id =
      obx.QueryIntegerProperty<ProductMapper>(_entities[0].properties[0]);

  /// See [ProductMapper.name].
  static final name =
      obx.QueryStringProperty<ProductMapper>(_entities[0].properties[1]);

  /// See [ProductMapper.image].
  static final image =
      obx.QueryStringProperty<ProductMapper>(_entities[0].properties[2]);

  /// See [ProductMapper.discountPercentage].
  static final discountPercentage =
      obx.QueryIntegerProperty<ProductMapper>(_entities[0].properties[3]);

  /// See [ProductMapper.price].
  static final price =
      obx.QueryDoubleProperty<ProductMapper>(_entities[0].properties[4]);

  /// See [ProductMapper.quantity].
  static final quantity =
      obx.QueryDoubleProperty<ProductMapper>(_entities[0].properties[5]);

  /// See [ProductMapper.minQuantity].
  static final minQuantity =
      obx.QueryDoubleProperty<ProductMapper>(_entities[0].properties[6]);

  /// See [ProductMapper.maxQuantity].
  static final maxQuantity =
      obx.QueryDoubleProperty<ProductMapper>(_entities[0].properties[7]);

  /// See [ProductMapper.currency].
  static final currency =
      obx.QueryStringProperty<ProductMapper>(_entities[0].properties[8]);

  /// See [ProductMapper.description].
  static final description =
      obx.QueryStringProperty<ProductMapper>(_entities[0].properties[9]);

  /// See [ProductMapper.barCode].
  static final barCode =
      obx.QueryStringProperty<ProductMapper>(_entities[0].properties[10]);

  /// See [ProductMapper.isFavourite].
  static final isFavourite =
      obx.QueryBooleanProperty<ProductMapper>(_entities[0].properties[11]);

  /// See [ProductMapper.isAvailable].
  static final isAvailable =
      obx.QueryBooleanProperty<ProductMapper>(_entities[0].properties[12]);

  /// See [ProductMapper.isAddedToCart].
  static final isAddedToCart =
      obx.QueryBooleanProperty<ProductMapper>(_entities[0].properties[13]);

  /// See [ProductMapper.id2].
  static final id2 =
      obx.QueryIntegerProperty<ProductMapper>(_entities[0].properties[14]);
}
