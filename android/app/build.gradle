plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    namespace 'com.icons.deelexpress'
    ndkVersion = "27.0.12077973"
    compileSdkVersion flutter.compileSdkVersion
    flavorDimensions = ["default"]

    productFlavors {
        app_live {
            dimension "default"
            applicationId "com.icons.deelexpress"
            resValue "string", "app_name", "Deel"
        }
        app_stage {
            dimension "default"
            applicationId "com.icons.deelexpress"
            resValue "string", "app_name", "Deel"
        }
        app_test {
            dimension "default"
            applicationId "com.icons.deelexpress"
            resValue "string", "app_name", "Deel"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.icons.deelexpress"
        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode 19
        versionName "19.0"
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            signingConfig = signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation(platform("com.google.firebase:firebase-bom:33.6.0"))
    implementation("com.google.firebase:firebase-analytics")
    implementation 'com.google.firebase:firebase-crashlytics:18.6.0'
}
//apply plugin: 'com.google.firebase.crashlytics'

